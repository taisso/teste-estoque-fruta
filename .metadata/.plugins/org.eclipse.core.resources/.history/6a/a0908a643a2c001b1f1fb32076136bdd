package modelo;

import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Fruta {

	private Integer id;

	private String nome;
	private Integer quantidade;
	private Float preco;

	public Fruta() {

	}

	public Fruta(Integer id, String nome, Integer quantidade, Float preco) {
		this.id = id;
		this.nome = nome;
		this.quantidade = quantidade;
		this.preco = preco;
	}

	public Integer getId() {
		return id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	public String getNome() {
		return nome;
	}

	public void setNome(String nome) {
		if (!nome.matches("(?=.*[}{,.^?~=+\\-_\\/*\\-+.\\|])(?=.*[a-zA-Z])(?=.*[0-9]).{8,}")) {
			throw new IllegalArgumentException("Nome inválido, não pode possuir caracteres especiais");
		}
		this.nome = nome;
	}

	public Integer getQuantidade() {
		return quantidade;
	}

	public void setQuantidade(Integer quantidade) {
		if (quantidade < 0) {
			System.out.println("Quantidade inválida, quantidade não pode ser menor que ZERO");
		}
		this.quantidade = quantidade;
	}

	public Float getPreco() {
		return preco;
	}

	public void setPreco(Float preco) {
		if (preco < 0.0) {
			System.out.println("Preço inválido, preço não pode ser menor que ZERO");
		}
		this.preco = preco;
	}

	@Override
	public String toString() {
		return "Fruta [id=" + id + ", nome=" + nome + ", quantidade=" + quantidade + ", preco=" + preco + "]";
	}

	public String retiraEspacosDuplicados(String string) {
		String patternStr = "\\s+";
		String replaceStr = " ";
		Pattern pattern = Pattern.compile(patternStr);
		Matcher matcher = pattern.matcher(string);
		string = matcher.replaceAll(replaceStr);
		return string;
	}

}
